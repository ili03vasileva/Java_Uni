import java.io.*;
import java.math.BigDecimal;

class Studio {
    private long id;
    private int maxWorkingHours;
    private BigDecimal minPricePerHour;
    private BigDecimal pricePerHour;
    private int workedHours;
    private double currencyEuro;

    public Studio(long id, int maxWorkingHours) {
        this.id = id;
        this.maxWorkingHours = (maxWorkingHours >= 0 && maxWorkingHours <= 24) ? maxWorkingHours : 24;
    }

    public void setMinPricePerHour(BigDecimal minPricePerHour) {
        this.minPricePerHour = minPricePerHour.max(BigDecimal.ZERO);
    }

    public void setPricePerHour(BigDecimal pricePerHour) {
        if (minPricePerHour != null) {
            this.pricePerHour = pricePerHour.max(minPricePerHour);
        } else {
            this.pricePerHour = pricePerHour;
        }
    }

    public void setWorkedHours(int workedHours) {
        this.workedHours = Math.min(workedHours, maxWorkingHours);
    }

    public void setCurrencyEuro(double currencyEuro) {
        this.currencyEuro = currencyEuro;
    }

    public long getId() {
        return id;
    }

    public int getMaxWorkingHours() {
        return maxWorkingHours;
    }

    public BigDecimal getMinPricePerHour() {
        return minPricePerHour;
    }

    public BigDecimal getPricePerHour() {
        return pricePerHour;
    }

    public int getWorkedHours() {
        return workedHours;
    }

    public double getCurrencyEuro() {
        return currencyEuro;
    }

    public BigDecimal getTurnoverInLv() {
        return pricePerHour.multiply(BigDecimal.valueOf(workedHours));
    }

    public BigDecimal getTurnoverInEuro() {
        return pricePerHour.multiply(BigDecimal.valueOf(workedHours)).multiply(BigDecimal.valueOf(currencyEuro));
    }

    public static Studio studioWithLargerPrice(Studio studio1, Studio studio2) {
        return studio1.getPricePerHour().compareTo(studio2.getPricePerHour()) > 0 ? studio1 : studio2;
    }

    public static boolean isFirstStudioWithGreaterTurnover(Studio studio1, Studio studio2) {
        return studio1.getTurnoverInLv().compareTo(studio2.getTurnoverInLv()) > 0;
    }
}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));

        long id = Long.parseLong(bufferedReader.readLine().trim());
        int maxWorkingHours = Integer.parseInt(bufferedReader.readLine().trim());
        BigDecimal minPricePerHour = new BigDecimal(bufferedReader.readLine().trim());
        double currencyEuro = Double.parseDouble(bufferedReader.readLine().trim());
        BigDecimal pricePerHour = new BigDecimal(bufferedReader.readLine().trim());
        int workedHours = Integer.parseInt(bufferedReader.readLine().trim());

        Studio studio1 = new Studio(id, maxWorkingHours);
        studio1.setMinPricePerHour(minPricePerHour);
        studio1.setPricePerHour(pricePerHour);
        studio1.setWorkedHours(workedHours);
        studio1.setCurrencyEuro(currencyEuro);

        System.out.printf("%.1f%n", studio1.getTurnoverInLv());
        System.out.printf("%.3f%n", studio1.getTurnoverInEuro());

        long id2 = Long.parseLong(bufferedReader.readLine().trim());
        int maxWorkingHours2 = Integer.parseInt(bufferedReader.readLine().trim());
        BigDecimal pricePerHour2 = new BigDecimal(bufferedReader.readLine().trim());
        int workedHours2 = Integer.parseInt(bufferedReader.readLine().trim());

        Studio studio2 = new Studio(id2, maxWorkingHours2);
        studio2.setMinPricePerHour(minPricePerHour);
        studio2.setPricePerHour(pricePerHour2);
        studio2.setWorkedHours(workedHours2);
        studio2.setCurrencyEuro(currencyEuro);

        System.out.println(studio1.studioWithLargerPrice(studio1, studio2).getId());
        System.out.println(studio1.isFirstStudioWithGreaterTurnover(studio1, studio2));

        bufferedReader.close();
    }
}

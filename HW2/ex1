// for 80/100
import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Manufacturer {
    String name;
    boolean extendedWarranty;

    Manufacturer(String name, boolean extendedWarranty) {
        this.name = name;
        this.extendedWarranty = extendedWarranty;
    }
}

class ElectricDevice {
    Manufacturer manufacturer;
    int minWarrantyMonths;

    ElectricDevice(Manufacturer manufacturer, int minWarrantyMonths) {
        this.manufacturer = manufacturer;
        this.minWarrantyMonths = minWarrantyMonths;
    }

    int warranty() {
        if (manufacturer.extendedWarranty) {
            return minWarrantyMonths + 12;
        } else {
            return minWarrantyMonths;
        }
    }
}

class Cooker extends ElectricDevice {
    boolean isGas;

    Cooker(Manufacturer manufacturer, int minWarrantyMonths, boolean isGas) {
        super(manufacturer, minWarrantyMonths);
        this.isGas = isGas;
    }

    @Override
    int warranty() {
        int baseWarranty = super.warranty();
        if (isGas) {
            return baseWarranty + 12;
        } else {
            return baseWarranty;
        }
    }
}

class WashingMachine extends ElectricDevice {
    boolean hasDryFunction;

    WashingMachine(Manufacturer manufacturer, int minWarrantyMonths, boolean hasDryFunction) {
        super(manufacturer, minWarrantyMonths);
        this.hasDryFunction = hasDryFunction;
    }

    @Override
    int warranty() {
        int baseWarranty = super.warranty();
        if (hasDryFunction) {
            return baseWarranty + minWarrantyMonths / 2; // 50% of minWarrantyMonths
        } else {
            return baseWarranty;
        }
    }
}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));

        String manufacturerName = bufferedReader.readLine();
        boolean isLongTermWarranty = Integer.parseInt(bufferedReader.readLine().trim()) != 0;
        int minWarranty = Integer.parseInt(bufferedReader.readLine().trim());
        boolean isGas = Integer.parseInt(bufferedReader.readLine().trim()) != 0;
        boolean isDryer = Integer.parseInt(bufferedReader.readLine().trim()) != 0;

        Manufacturer manufacturer = new Manufacturer(manufacturerName, isLongTermWarranty);

        ElectricDevice electricDevice = new ElectricDevice(manufacturer, minWarranty);

        System.out.println(electricDevice.warranty());
        
        electricDevice = new Cooker(manufacturer, minWarranty, isGas);

        System.out.println(electricDevice.warranty());


        electricDevice = new WashingMachine(manufacturer, minWarranty, isDryer);

        System.out.println(electricDevice.warranty());

        bufferedReader.close();
    }
}
